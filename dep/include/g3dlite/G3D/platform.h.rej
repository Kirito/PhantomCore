***************
*** 188,251 ****
      //  http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vccore98/HTML/_core_Compiler_Reference.asp
      //
  
- #if 0 //ignore that for Trinity
      // DLL runtime
      #ifndef _DLL
-         #define _DLL
      #endif
  
      // Multithreaded runtime
      #ifndef _MT
-         #define _MT 1
      #endif
      // Ensure that we aren't forced into the static lib
      #ifdef _STATIC_CPPLIB
-         #undef _STATIC_CPPLIB
      #endif
- #endif
  
      #ifdef _DEBUG
-         #pragma comment (linker, "/NODEFAULTLIB:libc.lib")
-         #pragma comment (linker, "/NODEFAULTLIB:libcmt.lib")
-         #pragma comment (linker, "/NODEFAULTLIB:msvcrt.lib")
-         #pragma comment (linker, "/NODEFAULTLIB:libcd.lib")
-         #pragma comment (linker, "/NODEFAULTLIB:msvcrtd.lib")
      #else
          #pragma comment(linker, "/NODEFAULTLIB:LIBC.LIB")
-         #pragma comment(linker, "/NODEFAULTLIB:msvcrt.lib")
-         #pragma comment(linker, "/NODEFAULTLIB:libcd.lib")
-         #pragma comment(linker, "/NODEFAULTLIB:libcmtd.lib")
-         #pragma comment(linker, "/NODEFAULTLIB:msvcrtd.lib")
      #endif
  
      // Now set up external linking
  
-     #ifdef _DEBUG
-         // zlib and SDL were linked against the release MSVCRT; force
          // the debug version.
-         #pragma comment(linker, "/NODEFAULTLIB:MSVCRT.LIB")
- #   endif
  
- #   ifndef WIN32_LEAN_AND_MEAN
  #       define WIN32_LEAN_AND_MEAN 1
- #   endif
  
  #   define NOMINMAX 1
  #   include <windows.h>
  #   undef WIN32_LEAN_AND_MEAN
  #   undef NOMINMAX
  
- #ifdef _G3D_INTERNAL_HIDE_WINSOCK_
- #   undef _G3D_INTERNAL_HIDE_WINSOCK_
- #   undef _WINSOCKAPI_
  #endif
  
- #endif
- 
- #   if defined(_MSC_VER) && (_MSC_VER <= 1200)
-         // VC6 std:: has signed/unsigned problems
- #       pragma warning (disable : 4018)
- #   endif
  
  /**
    @def STR(expression)
--- 158,289 ----
      //  http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vccore98/HTML/_core_Compiler_Reference.asp
      //
  
      // DLL runtime
      #ifndef _DLL
+ 	    #define _DLL
      #endif
  
      // Multithreaded runtime
      #ifndef _MT
+ 	    #define _MT 1
      #endif
+ 
      // Ensure that we aren't forced into the static lib
      #ifdef _STATIC_CPPLIB
+ 	    #undef _STATIC_CPPLIB
      #endif
  
      #ifdef _DEBUG
+         #pragma comment (linker, "/NODEFAULTLIB:LIBCMTD.LIB")
+         #pragma comment (linker, "/NODEFAULTLIB:LIBCPMTD.LIB")
+         #pragma comment (linker, "/NODEFAULTLIB:LIBCPD.LIB")
+         #pragma comment (linker, "/DEFAULTLIB:MSVCPRTD.LIB")
+         #pragma comment(linker, "/NODEFAULTLIB:LIBCD.LIB")
+         #pragma comment(linker, "/DEFAULTLIB:MSVCRTD.LIB")
      #else
          #pragma comment(linker, "/NODEFAULTLIB:LIBC.LIB")
+         #pragma comment(linker, "/DEFAULTLIB:MSVCRT.LIB")
+         #pragma comment (linker, "/NODEFAULTLIB:LIBCMT.LIB")
+         #pragma comment (linker, "/NODEFAULTLIB:LIBCPMT.LIB")
+         #pragma comment(linker, "/NODEFAULTLIB:LIBCP.LIB")
+         #pragma comment (linker, "/DEFAULTLIB:MSVCPRT.LIB")
      #endif
  
      // Now set up external linking
  
+ #    ifdef _DEBUG
+         // zlib was linked against the release MSVCRT; force
          // the debug version.
+ #        pragma comment(linker, "/NODEFAULTLIB:MSVCRT.LIB")
+ #	 endif
  
+ 
+ #    ifndef WIN32_LEAN_AND_MEAN
  #       define WIN32_LEAN_AND_MEAN 1
+ #    endif
+ 
  
  #   define NOMINMAX 1
+ #   ifndef _WIN32_WINNT
+ #       define _WIN32_WINNT 0x0500
+ #   endif
  #   include <windows.h>
  #   undef WIN32_LEAN_AND_MEAN
  #   undef NOMINMAX
  
+ #   ifdef _G3D_INTERNAL_HIDE_WINSOCK_
+ #      undef _G3D_INTERNAL_HIDE_WINSOCK_
+ #      undef _WINSOCKAPI_
+ #   endif
+ 
+ 
+ /** @def G3D_START_AT_MAIN()
+     Defines necessary wrapper around WinMain on Windows to allow transfer of execution to main(). */
+ #   define G3D_START_AT_MAIN()\
+ int WINAPI G3D_WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR szCmdLine, int sw);\
+ int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR szCmdLine, int sw) {\
+     return G3D_WinMain(hInst, hPrev, szCmdLine, sw);\
+ }
+ 
+ #else
+ 
+ /** @def G3D_START_AT_MAIN()
+     Defines necessary wrapper around WinMain on Windows to allow transfer of execution to main(). */
+ #   define G3D_START_AT_MAIN()
+ 
+ #endif  // win32
+ 
+ #ifdef __GNUC__
+ 
+ #    include <stdint.h>
+ 
+ #   if __STDC_VERSION__ < 199901
+ #        define restrict __restrict__
+ #   endif
+ 
+ /** @def G3D_DEPRECATED()
+     Creates deprecated warning. */
+ #   define G3D_DEPRECATED __attribute__((__deprecated__))
+ 
+ // setup function calling conventions
+ #   if defined(__i386__) && ! defined(__x86_64__)
+ 
+ #       ifndef __cdecl
+ #           define __cdecl __attribute__((cdecl))
+ #       endif
+ 
+ #       ifndef __stdcall
+ #           define __stdcall __attribute__((stdcall))
+ #       endif
+ 
+ #   elif defined(__x86_64__)
+ 
+ #       ifndef __cdecl
+ #           define __cdecl
+ #       endif
+ 
+ #       ifndef __stdcall
+ #           define __stdcall
+ #       endif
+ #   endif // calling conventions
+ 
+ /** @def G3D_CHECK_PRINTF_METHOD_ARGS()
+     Enables printf parameter validation on gcc. */
+ #   define G3D_CHECK_PRINTF_METHOD_ARGS   __attribute__((__format__(__printf__, 2, 3)))
+ 
+ /** @def G3D_CHECK_PRINTF_METHOD_ARGS()
+     Enables printf parameter validation on gcc. */
+ #   define G3D_CHECK_VPRINTF_METHOD_ARGS  __attribute__((__format__(__printf__, 2, 0)))
+ 
+ /** @def G3D_CHECK_PRINTF_METHOD_ARGS()
+     Enables printf parameter validation on gcc. */
+ #   define G3D_CHECK_PRINTF_ARGS          __attribute__((__format__(__printf__, 1, 2)))
+ 
+ /** @def G3D_CHECK_PRINTF_METHOD_ARGS()
+     Enables printf parameter validation on gcc. */
+ #   define G3D_CHECK_VPRINTF_ARGS         __attribute__((__format__(__printf__, 1, 0)))
  #endif
  
  
  /**
    @def STR(expression)
